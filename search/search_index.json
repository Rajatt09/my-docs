{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to My Docs","text":"<p>This is the personal documentation site of Rajat Bhati.</p>"},{"location":"#about-me","title":"About Me","text":"<ul> <li>GitHub: https://github.com/Rajatt09</li> <li>LinkedIn: https://www.linkedin.com/in/rajatbhati</li> <li>Email: rajatbhati9559@gmail.com</li> </ul>"},{"location":"#documentation","title":"Documentation","text":"<p>This site contains documentation for various tools and technologies that I use. It includes snippets and information that I refer to occasionally.</p>"},{"location":"mkdocs/information/mkdocs-info/","title":"MkDocs Setup Information","text":""},{"location":"mkdocs/information/mkdocs-info/#introduction","title":"Introduction","text":"<p>MkDocs is a static site generator that's geared towards project documentation. It is written in Python and is easy to configure and deploy.</p>"},{"location":"mkdocs/information/mkdocs-info/#installation","title":"Installation","text":"<p>To install MkDocs, use the following command:</p> <pre><code>pip install mkdocs\n</code></pre>"},{"location":"mkdocs/information/mkdocs-info/#creating-a-new-project","title":"Creating a New Project","text":"<p>To create a new MkDocs project, run:</p> <pre><code>mkdocs new my-project\ncd my-project\n</code></pre>"},{"location":"mkdocs/information/mkdocs-info/#running-the-project","title":"Running the Project","text":"<p>To start the live-reloading docs server, use:</p> <pre><code>mkdocs serve\n</code></pre> <p>You can then view the documentation at <code>http://127.0.0.1:8000/</code>.</p>"},{"location":"mkdocs/information/mkdocs-info/#building-the-documentation","title":"Building the Documentation","text":"<p>To build the documentation, run:</p> <pre><code>mkdocs build\n</code></pre> <p>This will create a <code>site</code> directory with your static site.</p>"},{"location":"mkdocs/information/mkdocs-info/#configuration","title":"Configuration","text":"<p>The configuration file <code>mkdocs.yml</code> is where you configure your MkDocs project. Here is an example configuration:</p> <pre><code># filepath: myDocs/my-project/mkdocs.yml\nsite_name: My Documentation Project\ntheme:\n  name: material\n  custom_dir: docs/overrides\n\n# above theme is added for customization of your docs (optional)\n\nnav:\n  - Home: index.md\n  - React:\n      - Snippets: react/snippets/example-snippet.md\n      - Information: react/information/example-info.md\n  - Bootstrap:\n      - Snippets: bootstrap/snippets/example-snippet.md\n      - Information: bootstrap/information/example-info.md\n  - Tailwind:\n      - Snippets: tailwind/snippets/example-snippet.md\n      - Information: tailwind/information/example-info.md\n  - Virtual Environment:\n      - Snippets: virtual-environment/snippets/create-virtual-env.md\n      - Information: virtual-environment/information/virtual-env-info.md\n  - MkDocs:\n      - Snippets: mkdocs/snippets/example-snippet.md\n      - Information: mkdocs/information/example-info.md\n\nplugins:\n  - search\n  - copy-button\n\nextra:\n  social:\n    - icon: fontawesome/brands/github\n      link: https://github.com/yourusername/yourrepo\n</code></pre>"},{"location":"mkdocs/information/mkdocs-info/#deployment","title":"Deployment","text":"<p>You can deploy your MkDocs site to GitHub Pages using:</p> <pre><code>mkdocs gh-deploy\n</code></pre> <p>For more detailed information, refer to the MkDocs documentation.</p>"},{"location":"mkdocs/snippets/mkdocs-snippet/","title":"MkDocs Setup Snippets","text":""},{"location":"mkdocs/snippets/mkdocs-snippet/#create-folder-structure","title":"Create Folder Structure","text":"<p>Create the following folder structure: (This is the sample structure where <code>docs</code> serve as the main directory and you have to include all the folders inside it. Add <code>mkdocs.yml</code> outside and <code>README.md</code>)</p> <pre><code>documentation-project\n\u251c\u2500\u2500 docs\n\u2502   \u251c\u2500\u2500 mkdocs\n\u2502   \u2502   \u251c\u2500\u2500 snippets\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 example-snippet.md\n\u2502   \u2502   \u2514\u2500\u2500 information\n\u2502   \u2502       \u2514\u2500\u2500 example-info.md\n\u2502   \u251c\u2500\u2500 react\n\u2502   \u2502   \u251c\u2500\u2500 snippets\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 example-snippet.md\n\u2502   \u2502   \u2514\u2500\u2500 information\n\u2502   \u2502       \u2514\u2500\u2500 example-info.md\n\u2502   \u251c\u2500\u2500 bootstrap\n\u2502   \u2502   \u251c\u2500\u2500 snippets\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 example-snippet.md\n\u2502   \u2502   \u2514\u2500\u2500 information\n\u2502   \u2502       \u2514\u2500\u2500 example-info.md\n\u2502   \u251c\u2500\u2500 tailwind\n\u2502   \u2502   \u251c\u2500\u2500 snippets\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 example-snippet.md\n\u2502   \u2502   \u2514\u2500\u2500 information\n\u2502   \u2502       \u2514\u2500\u2500 example-info.md\n\u2502   \u251c\u2500\u2500 virtual-environment\n\u2502   \u2502   \u251c\u2500\u2500 snippets\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 create-virtual-env.md\n\u2502   \u2502   \u2514\u2500\u2500 information\n\u2502   \u2502       \u2514\u2500\u2500 virtual-env-info.md\n\u2502   \u2514\u2500\u2500 index.md\n\u251c\u2500\u2500 mkdocs.yml\n\u2514\u2500\u2500 README.md\n</code></pre>"},{"location":"react/information/example-info/","title":"Example Information about React","text":"<p>React is a JavaScript library for building user interfaces, primarily for single-page applications. It allows developers to create reusable UI components, manage the state of applications, and efficiently update the user interface when data changes.</p>"},{"location":"react/information/example-info/#key-concepts","title":"Key Concepts","text":"<ul> <li> <p>Components: The building blocks of a React application. Components can be functional or class-based and can manage their own state.</p> </li> <li> <p>JSX: A syntax extension that allows writing HTML-like code within JavaScript. JSX makes it easier to create and visualize the structure of the UI.</p> </li> <li> <p>State and Props: State is a built-in object that allows components to create and manage their own data. Props (short for properties) are used to pass data from one component to another.</p> </li> <li> <p>Lifecycle Methods: Special methods that allow you to run code at specific points in a component's life, such as when it mounts, updates, or unmounts.</p> </li> <li> <p>Hooks: Functions that let you use state and other React features in functional components. Common hooks include <code>useState</code>, <code>useEffect</code>, and <code>useContext</code>.</p> </li> </ul>"},{"location":"react/information/example-info/#getting-started","title":"Getting Started","text":"<p>To create a new React application, you can use Create React App, a command-line tool that sets up a new React project with a sensible default configuration.</p> <pre><code>npx create-react-app my-app\ncd my-app\nnpm start\n</code></pre> <p>This will create a new directory called <code>my-app</code> with all the necessary files and dependencies to start building your React application.</p>"},{"location":"react/snippets/example-snippet/","title":"React Example Snippet","text":"<pre><code>// Example of a functional component in React\nimport React from 'react';\n\nconst ExampleComponent = () =&gt; {\n    return (\n        &lt;div&gt;\n            &lt;h1&gt;Hello, World!&lt;/h1&gt;\n            &lt;p&gt;This is an example snippet for a React functional component.&lt;/p&gt;\n        &lt;/div&gt;\n    );\n};\n\nexport default ExampleComponent;\n</code></pre>"},{"location":"virtual-environment/information/virtual-env-info/","title":"Virtual Environments","text":"<p>Virtual environments are isolated environments that allow you to manage dependencies for different projects separately. They are particularly useful in Python development, where different projects may require different versions of libraries.</p>"},{"location":"virtual-environment/information/virtual-env-info/#purpose-of-virtual-environments","title":"Purpose of Virtual Environments","text":"<ol> <li>Dependency Management: Virtual environments help manage project-specific dependencies without affecting the global Python installation.</li> <li>Version Control: You can maintain different versions of libraries for different projects, ensuring compatibility and stability.</li> <li>Isolation: Each virtual environment is self-contained, preventing conflicts between packages used in different projects.</li> </ol>"},{"location":"virtual-environment/information/virtual-env-info/#common-tools-for-creating-virtual-environments","title":"Common Tools for Creating Virtual Environments","text":"<ul> <li>venv: A built-in module in Python 3 that allows you to create lightweight virtual environments.</li> <li>virtualenv: A third-party tool that provides more features and supports older versions of Python.</li> <li>conda: A package manager that can create virtual environments and manage packages for Python and other languages.</li> </ul>"},{"location":"virtual-environment/information/virtual-env-info/#basic-commands","title":"Basic Commands","text":""},{"location":"virtual-environment/information/virtual-env-info/#using-venv","title":"Using <code>venv</code>","text":"<ol> <li> <p>Create a Virtual Environment:    <pre><code>python -m venv myenv\n</code></pre></p> </li> <li> <p>Activate the Virtual Environment:</p> </li> <li>On Windows:      <pre><code>myenv\\Scripts\\activate\n</code></pre></li> <li> <p>On macOS/Linux:      <pre><code>source myenv/bin/activate\n</code></pre></p> </li> <li> <p>Deactivate the Virtual Environment:    <pre><code>deactivate\n</code></pre></p> </li> </ol>"},{"location":"virtual-environment/information/virtual-env-info/#using-virtualenv","title":"Using <code>virtualenv</code>","text":"<ol> <li> <p>Install virtualenv (if not already installed):    <pre><code>pip install virtualenv\n</code></pre></p> </li> <li> <p>Create a Virtual Environment:    <pre><code>virtualenv myenv\n</code></pre></p> </li> <li> <p>Activate and Deactivate: Same as above.</p> </li> </ol>"},{"location":"virtual-environment/information/virtual-env-info/#using-conda","title":"Using <code>conda</code>","text":"<ol> <li> <p>Create a Virtual Environment:    <pre><code>conda create --name myenv\n</code></pre></p> </li> <li> <p>Activate the Virtual Environment:    <pre><code>conda activate myenv\n</code></pre></p> </li> <li> <p>Deactivate the Virtual Environment:    <pre><code>conda deactivate\n</code></pre></p> </li> </ol>"},{"location":"virtual-environment/information/virtual-env-info/#conclusion","title":"Conclusion","text":"<p>Using virtual environments is a best practice in software development, especially for Python projects. They help maintain clean and manageable project dependencies, making it easier to work on multiple projects simultaneously.</p>"},{"location":"virtual-environment/snippets/create-virtual-env/","title":"Creating a Virtual Environment","text":""},{"location":"virtual-environment/snippets/create-virtual-env/#python","title":"Python","text":"<p>To create a virtual environment in Python, follow these steps:</p> <ol> <li> <p>Install <code>virtualenv</code> (if not already installed): <code>pip install virtualenv</code></p> </li> <li> <p>Navigate to your project directory: <code>cd your-project-directory</code></p> </li> <li> <p>Create a virtual environment: <code>virtualenv venv</code></p> </li> <li> <p>Activate the virtual environment:</p> </li> <li> <p>On Windows:      <pre><code>venv\\Scripts\\activate\n</code></pre></p> </li> <li> <p>On macOS/Linux:      <pre><code>source venv/bin/activate\n</code></pre></p> </li> <li> <p>Deactivate the virtual environment when done:    <pre><code>deactivate\n</code></pre></p> </li> </ol>"},{"location":"virtual-environment/snippets/create-virtual-env/#nodejs","title":"Node.js","text":"<p>To create a virtual environment in Node.js, you can use <code>nvm</code> (Node Version Manager):</p> <ol> <li> <p>Install <code>nvm</code> (if not already installed):    Follow the installation instructions from the nvm repository.</p> </li> <li> <p>Install a specific Node.js version: <code>nvm install &lt;version&gt;</code></p> </li> <li> <p>Use the installed version: <code>nvm use &lt;version&gt;</code></p> </li> <li> <p>Deactivate the version: <code>nvm deactivate</code></p> </li> </ol>"}]}